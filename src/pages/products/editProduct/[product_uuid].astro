---
import { slide } from 'astro:transitions';
import {GET as GetProduct} from '@api/products/getProduct/[product_uuid]'
import { verifyToken } from '@api/users/verifyToken';
const userToken = await verifyToken(Astro.request)
 const {userRole } = userToken ?? {};
if(userRole === 'user') return Astro.redirect("/");
import { Image } from "astro:assets";
  
// @ts-ignore
 const response: Response = await GetProduct(Astro);
 if(!response.ok) return new Response(null, {
    status: 404,
    statusText: 'Page Not found'
  });
 const product = await response.json();
 const { uuid, image_src, image_src_2, image_src_3, name, description, category, price, quantity, advertisable,biddable} = product;
import MainHead from '@layouts/MainHead.astro';
---
<MainHead title="Edit Product Information | Technoworld" description="An admin page for editing product information based on its id"/>
  <main id="main-content" transition:animate={slide({duration: '.5s'})}>
    <form>
      <h1 style="text-align: center; margin-top:.4rem">Edit Product Information</h1>
     <div class="wrapper">
        <div class="flex ">
          <label for="price">Product Image URL 1</label>
          <input
          type="text"
          id="image1"
          name="image1"
          class="small"
          placeholder="Enter image URL 1..."
          value={image_src}/>
        </div>
        <div class="flex">
          <label for="price">Product Image URL 2</label>
          <input
          type="text"
          id="image2"
          name="image2"
          class="small"
          placeholder="Enter image URL 2..."
          value={image_src_2} />
        </div>
        <div class="flex">
          <label for="price">Product Image URL 3</label>
          <input
          type="text"
          id="image3"
          name="image3"
          class="small"
          placeholder="Enter image URL 3..." value={image_src_3} />
        </div>
      </div>

      <label for="name">Product Name</label>
      <input
        type="text"
        id="name"
        name="name"
        placeholder="Enter name..." value={name}/>
         
         <label for="description">Product Description</label>
       <textarea name="description" id="description" placeholder="Enter description..." ></textarea>

        <div class="wrapper">
          <div class="flex">
            <label for="price">Product Price</label>
            <input
            maxlength="6"
              type="text"
              id="price"
              name="price"
              class="small"
              placeholder="Enter price..." 
              pattern="[0-9]*"
              title="Please enter numbers only" value={price}/>
          </div>
             <div class="flex">
               <label for="quantity"> Product Quantity</label>
                <input type="text"  maxlength="3" name="quantity" class="small" id="quantity" pattern="[0-9]*" title="Please enter numbers only" placeholder="Enter quantity..." value={quantity}>
             </div>
        </div>
          <div class="wrapper">
            <div class="flex">
              <label for="price">Product Category</label>
              <select id="category" class="select | small">
                <option value=""> -- Select One --</option>
                <option value="laptops">Laptops</option>
                <option value="desktops">Desktops</option>
                <option value="consoles">Consoles</option>
                <option value="smartphones">Smartphones</option>
                <option value="accessories">Accessories</option>
                <option value="tvs">TVs</option>

              </select>
            </div>
            
             <div class="flex">
               <label for="advertisable">Advertisable</label>
                <select id="advertisable" name="category" class="select | small">
                           <option value="">-- Select One --</option>
                           <option value="true">True</option>
                           <option value="false">False</option>
                      </select>
             </div>
             <div class="flex">
               <label for="biddable">Biddable</label>
                <select id="biddable" name="biddable" class="select | small">
                  <option value="false">False</option>
                           <option value="true">True</option>
                      </select>
                      
             </div>
          </div>
      </div>

      <input type="submit" value="Edit Product Information" />
    </form>
  <Image src="/imgs/createProduct.jpg" alt="Default Image for creating a product" width='1000' height='500' loading='eager'>

  </main>

<style>
  *,*::before,*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  body {
  background-image: linear-gradient(to left bottom, #7c0685, #6a0487, #56078a, #3b0c8c, #05118d);
    color: hsl(0, 0%, 100%);
    overflow-x: hidden;
    line-height: 1.3;   
  }
  main{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    place-items: center;
  }
  @media (width < 1100px){
    main{
      grid-template-columns: repeat(1,1fr);
      
    }
  }
  img{
    max-width: 100%;
    height: 100%;
  }
  form {
    display: grid;
    place-items: center;
  }

  label {
    font-weight: 500;
    margin-top: 1rem;
    font-size: 1.2rem;
  }
  @keyframes shake {
  0% {
    margin-left: 0rem;
  }
  25% {
    margin-left: 0.5rem;
  }
  75% {
    margin-left: -0.5rem;
  }
  100% {
    margin-left: 0rem;
  }
}

input:invalid {
  animation: shake 0.2s ease-in-out 0s 2;
  box-shadow: 0 0 0.6rem #ff0000;
}

.wrapper{
  display: flex;
  gap: 1rem;
}
  .flex {
    display: flex;
    align-items: center;
   flex-direction: column;
  }
    form .small{
   width: max(160px, 5rem);
  }
  input[type="text"],
  .select, textarea {
    padding: 0.5rem 1rem;
    width: max(500px, 20rem);
    margin: 0.5rem 0;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    caret-color: hsl(358, 72%, 50%);
  }
  textarea{
    resize: none;
    height: 154px;
  }
    @media (width < 720px) {
   input[type="text"],
  .select, textarea {
    width: max(350px, 20rem);
  }
    }

  input[type="submit"] {
    background-color: hsl(296, 91%, 27%);
    color: white;
    padding: 0.8rem 2rem;
    margin-top: 1.5rem;
    margin-bottom: .5rem ;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;
  }

  input[type="submit"]:where(:hover, :focus-visible) {
    background-color: hsl(296, 91%, 37%);;
  }
  .tip{
    opacity: .95;
    font-size: .95rem;
  }
</style>
<script define:vars={{uuid, description, category, advertisable,biddable }}>

document.addEventListener("astro:page-load", async () => {
  // Populate the form fields with product data
  const imageInput = document.getElementById('image1');
  const imageInput2 = document.getElementById('image2');
  const imageInput3 = document.getElementById('image3');

  const nameInput = document.getElementById('name');
  const descriptionInput = document.getElementById("description");
  const priceInput = document.getElementById('price');
  const categoryInput = document.getElementById('category');
  const quantityInput = document.getElementById('quantity');
  const advertisableInput = document.getElementById('advertisable');
  const biddableInput = document.getElementById('biddable');

  descriptionInput.value = description;
  categoryInput.value = category;
  advertisableInput.value = advertisable;
  biddableInput.value = biddable;

  const editForm = document.querySelector('form');
  editForm.addEventListener('submit', async (event) => {
    event.preventDefault();

    let editedProduct = {
      name: nameInput.value,
      description: descriptionInput.value,
      price: priceInput.value,
      quantity: quantityInput.value,
      category: categoryInput.value,
      advertisable: advertisableInput.value,
      biddable: biddableInput.value,
    };

    // Check and update the first image
    if (imageInput.value.includes('data:image/avif;base64,')) {
      editedProduct.image_src = imageInput.value;
    } else {
      const imageUrl = imageInput.value;
      const response = await fetch('/api/products/convertProductImage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ imageUrls: { imageUrl1: imageUrl } }),
      });
      const data = await response.json();
      editedProduct.image_src = data.convertedImages.imageUrl1;
    }

    // Check and update the second image
    if (imageInput2.value.includes('data:image/avif;base64,')) {
      editedProduct.image_src_2 = imageInput2.value;
    } else {
      const imageUrl = imageInput2.value;
      const response = await fetch('/api/products/convertProductImage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ imageUrls: { imageUrl2: imageUrl } }),
      });
      const data = await response.json();
      editedProduct.image_src_2 = data.convertedImages.imageUrl2;
    }

    // Check and update the third image
    if (imageInput3.value.includes('data:image/avif;base64,')) {
      editedProduct.image_src_3 = imageInput3.value;
    } else {
      const imageUrl = imageInput3.value;
      const response = await fetch('/api/products/convertProductImage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ imageUrls: { imageUrl3: imageUrl } }),
      });
      const data = await response.json();
      editedProduct.image_src_3 = data.convertedImages.imageUrl3;
    }

    // Send the updated product data to the server
    const response = await fetch(`/api/products/editProduct/${uuid}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(editedProduct),
    });

    if (response.ok) {
      const responseData = await response.json();
      alert(responseData.message);
      location.href = '/';
    } else {
      const responseData = await response.json();
      alert(`Error: ${responseData.error}`);
    }
  });
});



</script>