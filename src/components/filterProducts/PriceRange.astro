---
     // Parse minPrice and maxPrice from the URL parameters
    const minPrice = parseInt(Astro.url.searchParams.get('minPrice')!) || 0;
    const maxPrice = parseInt(Astro.url.searchParams.get('maxPrice')!) || 3000;
---
<div class="wrapper">
        <header style="text-align: center;">
          <h3>Price Range</h3>
          <span class="note"><strong>*Note:</strong> Price Range values are in USD only </span>
        </header>
        <div class="price-input">
          <div class="field">
            <span>Min</span>
            <label for="input-min"><span class="sr-only">Min Price</span></label>
            <input type="number" class="input-min" id="input-min" value={minPrice}>
          </div>
          <div class="separator">-</div>
          <div class="field">
            <span>Max</span>
            <label for="input-max"><span class="sr-only">Max Price</span></label>
            <input type="number" class="input-max" id="input-max" value={maxPrice}>
          </div>
        </div>
        <div class="slider">
          <div class="progress"></div>
        </div>
        <div class="range-input">
            <label for="range-min"><span class="sr-only">Min Range</span></label>
          <input type="range" class="range-min" id="range-min" min="0" max="3000" value={minPrice} step="20">
          <label for="range-max"><span class="sr-only">Max Range</span></label>
          <input type="range" class="range-max" id="range-max" min="0" max="3000" value={maxPrice} step="20">
        </div>
      </div>

<style>
  input{
    caret-color: var(--clr-accent-400);
  }
    .wrapper {
  width: 240px;
  padding: 20px 25px 10px;
}
header h3 {
  text-align: center;
  font-size: 1.2rem;
  font-weight: 600;
}
header p {
  margin-top: 5px;
  font-size: 16px;
}
.price-input {
  width: 100%;
  display: flex;
  margin: 30px 0 35px;
}
.price-input .field {
  display: flex;
  height: 45px;
  align-items: center;
}
.field input {
  width: 50%;
  height: 100%;
  outline: none;
  font-size: 19px;
  margin-left: 12px;
  border-radius: 5px;
  text-align: center;
  border: 1px solid #999;
  -moz-appearance: textfield;
}
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
.price-input .separator {
  width: 50px;
  display: flex;
  font-size: 19px;
  align-items: center;
  justify-content: center;
}
.slider {
  height: 5px;
  position: relative;
  background: var(--clr-neutral-200);
  border-radius: 5px;
}
.slider .progress {
  height: 100%;
  position: absolute;
  border-radius: 5px;
  background: var(--clr-primary-600);
}
.range-input {
  position: relative;
}
.range-input input {
  position: absolute;
  width: 100%;
  height: 5px;
  top: -5px;
  background: none;
  pointer-events: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}
input[type="range"]::-webkit-slider-thumb {
        cursor: pointer;

  height: 17px;
  width: 17px;
  border-radius: 50%;
  background: var(--clr-primary-600);
  pointer-events: auto;
  -webkit-appearance: none;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}
input[type="range"]::-moz-range-thumb {
  height: 17px;
  width: 17px;
  border: none;
  border-radius: 50%;
  background: #17a2b8;
  pointer-events: auto;
  -moz-appearance: none;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}
</style>

<script define:vars={{minPrice,maxPrice}}>
  document.addEventListener("astro:page-load",()=>{

  const rangeInput = document.querySelectorAll(".range-input input"),
        priceInput = document.querySelectorAll(".price-input input"),
        range = document.querySelector(".slider .progress");
if(!range) return;
  range.style.left = (minPrice / rangeInput[0].max) * 100 + "%";
 range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
  let priceGap = 300;

  function updateURLParams() {
    const minPrice = priceInput[0].value;
    const maxPrice = priceInput[1].value;

    const url = new URL(`${location.origin}/products/search/1?${location.href.split("?")[1]}`)
    const searchParams = new URLSearchParams(url.search);
    searchParams.set("minPrice", minPrice);
    searchParams.set("maxPrice", maxPrice);
    url.search = searchParams.toString();

    window.location.assign(url.toString());
  }
  priceInput.forEach((input) => {

    input.addEventListener("input", (e) => {
      let minPrice = parseInt(priceInput[0].value),
          maxPrice = parseInt(priceInput[1].value);

      if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {
        if (e.target.className === "input-min") {
          rangeInput[0].value = minPrice;
          range.style.left = (minPrice / rangeInput[0].max) * 100 + "%";
        } else {
          rangeInput[1].value = maxPrice;
          range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
        }

        updateURLParams();
      }
    });
  });

  rangeInput.forEach((input) => {
    input.addEventListener("input", (e) => {
      let minVal = parseInt(rangeInput[0].value),
          maxVal = parseInt(rangeInput[1].value);

      if (maxVal - minVal < priceGap) {
        if (e.target.className === "range-min") {
          rangeInput[0].value = maxVal - priceGap;
        } else {
          rangeInput[1].value = minVal + priceGap;
        }
      } else {
        priceInput[0].value = minVal;
        priceInput[1].value = maxVal;
        range.style.left = (minVal / rangeInput[0].max) * 100 + "%";
        range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";

        updateURLParams();
      }
    });
  });
})
</script>
